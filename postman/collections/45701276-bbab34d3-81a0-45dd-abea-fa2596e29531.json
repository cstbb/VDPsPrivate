{
	"info": {
		"_postman_id": "45701276-bbab34d3-81a0-45dd-abea-fa2596e29531",
		"name": "Sistema de Gest√£o Hospitalar VidaPlus",
		"description": "## Projeto\n\nO VidaPlus √© um sistema moderno de gest√£o hospitalar desenvolvido para centralizar e otimizar todas as opera√ß√µes relacionadas √† sa√∫de. Nossa solu√ß√£o integra hospitais, cl√≠nicas, laborat√≥rios e equipes de home care em uma √∫nica plataforma.\n\n### ‚ú® Principais Funcionalidades\n\n- üë§ **Gest√£o de Pacientes**\n    \n    - Cadastro completo\n        \n    - Hist√≥rico m√©dico\n        \n    - Agendamento de consultas\n        \n    - Prontu√°rios eletr√¥nicos\n        \n- üë®‚Äç‚öïÔ∏è **Gest√£o de Profissionais**\n    \n    - Cadastro de m√©dicos\n        \n    - Controle de agendas\n        \n    - Prescri√ß√µes digitais\n        \n    - Hist√≥rico de atendimentos\n        \n- üè• **Administra√ß√£o Hospitalar**\n    \n    - Controle de leitos\n        \n    - Gest√£o de suprimentos\n        \n    - Relat√≥rios financeiros\n        \n    - Indicadores de desempenho\n        \n- üíª **Telemedicina**\n    \n    - Consultas online\n        \n    - Prescri√ß√µes digitais\n        \n    - Agendamento remoto\n        \n    - Prontu√°rios eletr√¥nicos\n        \n\n## üöÄ Come√ßando\n\n### Pr√©-requisitos\n\n- Python 3.8 ou superior\n    \n- pip (gerenciador de pacotes Python)\n    \n- Postman (para testes da API)\n    \n\n### üîß Instala√ß√£o\n\n1. Clone o reposit√≥rio\n    \n\n```\ngit clone https://github.com/seu-usuario/vidaplus.git\ncd vidaplus\n\n ```\n\n1. Crie e ative o ambiente virtual\n    \n\n```\n# Windows\npython -m venv venv\nvenv\\Scripts\\activate\n# Linux/Mac\npython -m venv venv\nsource venv/bin/activate\n\n ```\n\n1. Instale as depend√™ncias\n    \n\n```\npip install -r requirements.txt\n\n ```\n\n1. Configure as vari√°veis de ambiente Crie um arquivo `.env` na raiz do projeto:\n    \n\n```\nDATABASE_URL=sqlite:///vidaplus.db\nJWT_SECRET_KEY=sua-chave-secreta-aqui\nFLASK_ENV=development\nFLASK_APP=app.py\n\n ```\n\n1. Execute o sistema\n    \n\n```\npython app.py\n\n ```\n\n## üì° Endpoints da API\n\n### üîê Autentica√ß√£o\n\n- `POST /api/auth/registro` - Registro de novo usu√°rio\n    \n- `POST /api/auth/login` - Login de usu√°rio\n    \n\n### üë§ Pacientes\n\n- `POST /api/pacientes` - Cadastro de novo paciente\n    \n- `GET /api/pacientes/{id}` - Consulta de paciente\n    \n- `PUT /api/pacientes/{id}` - Atualiza√ß√£o de dados\n    \n\n### üìÖ Consultas\n\n- `POST /api/consultas` - Agendamento de consulta\n    \n- `GET /api/consultas/{id}` - Detalhes da consulta\n    \n- `PUT /api/consultas/{id}` - Atualiza√ß√£o de status\n    \n\n### üìã Prontu√°rios\n\n- `POST /api/prontuarios` - Cria√ß√£o de prontu√°rio\n    \n- `GET /api/prontuarios/{id}` - Consulta de prontu√°rio\n    \n- `PUT /api/prontuarios/{id}` - Atualiza√ß√£o de prontu√°rio\n    \n\n## üõ°Ô∏è Seguran√ßa\n\n- üîí Autentica√ß√£o via JWT\n    \n- üîê Senhas criptografadas com bcrypt\n    \n- üë• Controle de acesso por perfil\n    \n- üìú Conformidade com LGPD\n    \n- üîç Registro de auditoria\n    \n\n## üìä Banco de Dados\n\nO sistema utiliza SQLite como banco de dados principal, com suporte para migra√ß√£o para PostgreSQL em ambiente de produ√ß√£o.\n\n## üß™ Testes\n\nPara executar os testes:\n\n```\npython -m pytest\n\n ```\n\n## üìù Documenta√ß√£o\n\nA documenta√ß√£o completa do sistema est√° dispon√≠vel em:\n\n- [Documenta√ß√£o T√©cnica](https://github.com/maydoc/VidaPlus/blob/main/DOCUMENTACAO.md)\n    \n- [Guia de API](https://github.com/maydoc/VidaPlus/blob/main/API.md)\n    \n- [Manual do Usu√°rio](https://github.com/maydoc/VidaPlus/blob/main/MANUAL.md)\n    \n\n## ü§ù Contribuindo\n\n1. Fa√ßa o fork do projeto\n    \n2. Crie uma branch para sua feature (`git checkout -b feature/AmazingFeature`)\n    \n3. Commit suas mudan√ßas (`git commit -m 'Add some AmazingFeature'`)\n    \n4. Push para a branch (`git push origin feature/AmazingFeature`)\n    \n5. Abra um Pull Request\n    \n\n## üìû Suporte\n\nPara suporte, envie um email para [suporte@vidaplus.com](https://mailto:suporte@vidaplus.com) ou abra uma issue no GitHub.\n\n## üôè Agradecimentos\n\n- [Flask](https://flask.palletsprojects.com/)\n    \n- [SQLAlchemy](https://www.sqlalchemy.org/)\n    \n- [JWT](https://jwt.io/)\n    \n- [Postman](https://www.postman.com/)\n    \n\n---\n\nEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AgendaConsulta",
			"item": [],
			"id": "45701276-92650be0-4d8b-4065-ab08-9b9ec4a384cb"
		},
		{
			"name": "Usu√°rios",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a94fc13-cea2-4a77-b622-cd2abe215a68",
						"exec": [
							"// request POST /users/signup\r",
							"// body JSON\r",
							"{\r",
							"  \"name\": \"Cambriel\",\r",
							"  \"email\": \"cambriel@gmail.com\",\r",
							"  \"password\": \"camb0522\"\r",
							"}\r",
							"\r",
							"// response\r",
							"// status 201 CREATED\r",
							"{\r",
							"  token: \"um token jwt\"\r",
							"}\r",
							"\r",
							"public class TesteUsuarios {\r",
							"    public static void main(String[] args) {\r",
							"        Usuario admin = new Usuario(\"Camila\", \"admin\", \"4462521\", TipoUsuario.ADMINISTRADOR);\r",
							"        Usuario medico = new Usuario(\"Dra. Fabia\", \"fabia\", \"senha\", TipoUsuario.MEDICO);\r",
							"\r",
							"        System.out.println(admin);\r",
							"        System.out.println(medico);\r",
							"    }\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "45701276-164ebaed-7342-43b1-a608-489f47a3ce16",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Cadastro_Pacientes",
			"id": "45701276-63dfb7cd-254a-4650-a674-9943e654e5ea",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Perfis",
			"id": "45701276-c8579637-d7df-47fd-833e-97a7c7d7ef90",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "InicioSite",
			"id": "45701276-c07a26e7-e083-4988-8c5a-2e3fea865ec0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Seguran√ßa",
			"id": "45701276-a3d5bd00-73e8-405e-ad13-8cddb340f264",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "New Request",
			"id": "45701276-16aaba3f-83fd-4b09-92fe-babeb07897cf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}